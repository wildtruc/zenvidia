#! /bin/bash

E="Download"
PM="Back to previous menu"
MM="Back to main menu"
I="Quit"
CC="Confirm"
R="Back to main"
GO="Go on"

## Main Menu Vars
_01="Install" # Aa
_02="Update" # Ab
_03="Tools" # Af
_04="Tests and Support" # Ag
_05="Fix" # Ad
_06="Download"
_07="Back"
## menu install
_1a="From a local package" # A2
_1b="From NVIDIA server" # A3
_1c="Install Optimus [GIT]" # B6
_1d="Driver uninstall" # B2
## menu update
_2a="Update driver only" # G1
_2b="Update driver for an other kernel" # G2
_2c="Optimus source update (Bumblebee)" # G3
_2d="Optimus source update (Prime)"
_2e="Driver upgrade" # G4
_2f="Zenvidia update"
## menu modif 
_3a="Edit xorg.conf " # G5
_3b="Edit script config" # G6
_3c="Nvidia Settings" # G8
_3d="Manage drivers packages" # G9
_3e="Build/Rebuild" # G10
_3f="Broken install repair"
_3g="Notifications config"
_3h="Prime config"
# menu manage
_4a="GLX test" # G15
_4b="Manual" # G16
_4c="Change log" # G17
_4d="About zenvidia " # G18
## add on
_5a="Force dkms build/rebuild"
## menu manage_pcks
_6a="Remove downloaded package"
_6b="Backup"
_6c="Restore"
_6d="Selected to be removed:\n$j%s$end driver(s)."
_6e="Driver backup"
_6f="Remove the associated directory"
_6g="Please, confirm you action."
_6h="Remove primary driver directory"

## menu test
_7a="GLXGears"
_7b="GLXSpheres"

## Classic answer
ansOK="OK"
ansNF="NOT PRESENT"
ansNA="NONE"
ansCF="Confirm your choice."
ansWN="What do you want to do ?"

### NETWORK CONTROL
msg205="Network connection control" # 205

### FIRST START
msg_00_01="\t\t   ZENVIDIA\n$nf\t\t Nvidia® drivers manager$end" # 701*
msg_00_02="System :" # 706*
msg_00_04="Card" # 708*
msg_00_06="Repositories are met" # 710
msg_00_07="NVIDIA repository doesn't exist" # 711*
msg_00_08="Choose a place (prefer /usr/local/)" # 712*

# connection_control
msg_00_10="Connection control" # 205
msg_00_11=" No internet connection detected.\nA valid network connection is required\nfor any download." # 106
msg_00_06="Network connection " # 111
# dependencies control
msg_00_12="Distro not defined. You need to insall dependecies manually " # 101

## MAIN MENU
msg_0_00="Processor type :" # 707*
msg_0_01="Driver version installed :" # 202
msg_0_02="Kernel version :" # 202a
msg_0_03="GCC version :" # 202b
msg_0_04="NVIDIA binary version :" # 202c
msg_0_05="Working directories control" # 709*

## MENU INSTALL
msg_1_01="NVIDIA package update from local dir. " # 603
msg_1_02="Retrieve driver info from NVIDIA server." # 604
msg_1_03="Optimus install from GIT sources" # 617
msg_1_04="Uninstall driver" # 606

## MENU UPDATE
msg_2_01="Build module for current kernel" # 614
msg_2_02="Build module for the selected kernel" # 610
msg_2_03="Optimus update (Bumblebee)" # 618
msg_2_04="Optimus update (Prime)"
msg_2_05="Zenvidia update"
msg_2_06="Check driver updates list" # 609

## MENU OPTIMUS 
msg_3_01="Bumblebee install type (integrated virtualisation)"
msg_3_02="Prime install type (per GPU session)"
msg_3_03="$vB\Two solutions:$end$v\n\t- Virtualized intergrated display with Bumblebee.\n\t- One GPU at a time with Prime.$end"

## MESSAGE INSTALL
# from directory
m_01_01="Local NVIDIA drivers list :" # 320
m_01_02="Use one of the listed above or one from a user directory." # 321
m_01_03="Listed version" # 322
m_01_04="Use a local directory" # 323
m_01_05="Driver list in" # 324
m_01_06="Select a driver from a local directory" # 325

# check_update
m_01_07="FTP data download" # 206
m_01_08="Compatibility check" # 207
#msg208="n'est pas compatible VDPAU"
#msg209="compatible VDPAU de classe"
m_01_09="is compatible." # 208
m_01_10="compatible" # 209
m_01_11="fit your hadrware " # 210
m_01_12="doesn't fit your hadrware anymore" # 211a

# win_update
m_01_13="What do you want to do ?" # 215
m_01_14a="is" # 215c1
m_01_14b="is not" # 215c2
m_01_14c="Official and BETA are" # 215c3
m_01_16="in your repository" # 215e
m_01_17="Go back to \"Install\" menu if needed" # 215f
m_01_18="installed" # 215g
m_01_19="Available drivers" # 201
### check available updates
m_01_20a="official"
m_01_20b="BETA"
m_01_20="The $m_01_20a version is :" # 203
m_01_21="The last $m_01_20b is :" # 204

# nv_cmd_uninstall
m_01_70="Old packages removal"

# upgrade_kernel / upgrade_new_kernel
m_02_01="Kernel update" # 612
m_02_02="$m_02_01" # 619
m_02_03="$m_01_13 :" # 601

m_02_04="Driver config" # 607
m_02_05="Optimus service restart" # 608
m_02_06="Done, back to main menu" # 613

m_02_07="Driver install" # 219c
m_02_08="for ha	hardware" # 219d
m_02_09="Pick the kernel to up to date " # 611
# extract_build
m_02_10="Primary package extraction"
m_02_11="Nvidia repository not found"
m_02_12="Extraction failure"
# pre-ops messages
m_02_13="Nvidia Optimus driver install"
m_02_14="Nvidia distro drivers replacement"
m_02_15="Single graphic card install"

# install_dir_sel
m_01_22="Standard (Single GPU)" # 217
m_01_23="Replace distro drivers" # 218
m_01_24="Multi GPU via optimus" # 218b
m_01_25="Install type choice" # 216
m_01_26="Predefine default repository is"
m_01_27a="Multi GPU version install" # 219a
m_01_27b="exist"
m_01_28="is not detected. Will you install from GIT sources ?'.
(type ENTER to confirm )" # 219
m_01_29="Use Bumblebee"
m_01_30="Use Prime"
m_01_31="bumblebee"
m_01_32="prime"

# optimus_src_ctrl
m_02_16="Update"
m_02_17="Sources check"
m_02_18="Checking for"
m_02_19="is up to date. Next"
m_02_20="Updating"
# optimus_dependencies_ctrl
m_02_21="Sources and dependencies control"
m_02_22="There's some missing dependencies. Install"
m_02_23="Dependencies installed"
m_02_24="Optimus checking"
# build_all
m_02_25="Sources directory is missing. Building"
m_02_26="Optimus and Nvidia GIT sources are already installed."
m_02_27="Check for updates instead ?"
m_02_28="Yes, check !"
m_02_29="Sources download and install"
m_02_30="Sources compilation and install done"

m_03_01=""

# BUILDING
# bb_build
# bumble_build
# primus_build
# prime_build

# installer_build
m_03_51="$m_02_22"
m_03_52="$m_02_23"
m_03_53="All dependencies are Installed"
# optimus_source_rebuild
# re_build

# install_drv
m_03_60="Starting install..." # 301
m_03_61="Driver backup copy" # 303
m_03_62="success" # 305
m_03_63="Je peux procéder à l'archivage." # 304
m_03_64="mistake." # 306
m_03_65=""
#"Congrats! Driver is successfuly installed." # 302
#msg309="Enfoncer un touche pour continuer." # 328
m_03_66="Ouch!$v No proper Nvidia package found in rep \n Go to NVIDIA site," # 310
m_03_67="here :" # 311
m_03_68="or to NVIDIA ftp repo" # 316
m_03_69="Installing driver" # 219c
m_03_70="for hardware :" # 219d

# post_install


# download_menu
m_01_40="Choose the version to install:" # 413
m_01_41="official" # 413a
m_01_42="beta" # 413b
m_01_43a="Other"
m_01_43b="old version" # 413c
#msg414="téléchargement du pilote officiel" # 414
#msg415="téléchargement du pilote BETA" # 415
# download_only
m_01_44="driver download" # 415a
m_01_45="Download error\nLocal package size differ from original.\nRestart." # 415b
m_01_46="Driver download" # 415c
m_01_47="ended." # 415d
m_01_48="failure" # 415e
m_01_49="Binary$end $j\nvidia-installer$end$v missing.\n Install from GIT ?" # 416
m_01_50="The package" # 406
m_01_51="doesn't exist" # 407
# package_list
m_01_52="Driver list"
# last_pack
m_01_53="downloaded at"
m_01_54="time left"
m_01_55="Remote content control..." # 405
m_01_56="Preparing"
m_01_57="Searching for"
# from_net
# win_confirm
# fix_broken_install
m_01_80="This want to repair broken Nvidia install after a main system reinstall.\nOr over a fresh system install.\n\n(previous Zenvidia directories must already exist or being restored)"
m_01_81="The following items has been repaired :$end\n\n$j%s$end$vB\n\nRestart now your hardware for changes to take effects."
m_01_82="System is clean.\nNothing to be done."
m_01_83="Yes, all is good. Let's go on."
# backup_pcks
m_01_70="is already backed up.\nNo reason to do it again"
m_01_71=""
m_01_72=""
# restore_pcks
m_01_75="Choose the driver you want to"
m_01_76="Restoring $j%s$end will replace actual$end $j%s"
m_01_77="Yes, restore and replace."
m_01_78="Restoring $j%s$end backup. Hold on."
m_01_7=""
m_01_7=""

# edit_script_conf
m_01_58="Edit script config file"
m_01_59="Confirm to overwrite"

# edit_xorg_conf
m_01_60="Edit xorg.conf file"

# read_help
m_01_61="Zenvidia help"
# read_nv_help
m_01_62="Nvidia man-page"
# read_changelog
m_01_63="Nvidia changelog"
# nv_config
# glx_test 
m_01_64="Press [ctrl+c] to end test"

## VOCABULARY
w_01="Downloads"
w_02="Download"
w_03="ended"

## update notification
msg_driver="driver update is out"
msg_git="a GIT update is out"

# zen_notif_setup
notif_msg="Notification is currently set to:\n> $j%s$end"
menu_notif_01="Check driver update only"
menu_notif_02="Check zenvidia and driver update"
menu_notif_03="Check all (driver, zenvidia, git repos)"
m_notif_01="driver check only"
m_notif_02="driver and zenvidia check"
m_notif_03="all (driver, zenvidia, all git sources)"
wrn_notif_01="Autostart launcher set to $j%s$end."

# prime_setup
prime_msg_01="\n$vB\Select the Prime setup you would like to use$end:"
prime_msg_02="Default is currently set to $j%s$end."
prime_msg_03="\tDefault has been set to Nvidia device only.
\tYou can leave it as it is, change it now, or
\tdo it later in$j Tools$end menu > $j$_3h$end"
menu_prime_01="Set Prime to Intel device"
menu_prime_02="Set Prime to Nvidia device"
menu_prime_03="Set permanently Prime to Nvidia device"
m_prime_01="intel"
m_prime_02="nvidia"
m_prime_03="permanent nvidia"
wrn_prime_01="Prime will be set to $j%s$end."
wrn_prime_02="\nYou may restart the user session to take effect."

# warnings and others big text.
wrn_06c="The backup you are going to restore is the same as the one used by the system.
LibGL crash the X server when loaded and used by the actual display if overwrote.\n
To prevent data loss when copying and others ugly deasagrements,
Zenvidia wont replace the actual install by overwriting $j%s$end over itself."
lab_06c="Thanks for the advice!"
wrn_06f="The associated directory you're about to remove is the same as the actually running.
This action will fataly break $j%s$end installation and you don't want to do this.\n
Action skipped."
lab_06f="Yes, I understand my mistake"
wrn_06a="Package $j%s$end is same used by the system. If you need it again for any reason,
you can download it with the $j$_2e$end tool from the $j$_02$end menu."
inf_06a="Driver(s):\n$j%s$end\npackage(s) removed."
wrn_03e="$j%s$end is not actually present on your system.
Go to $j$_1c$end if you need to do so."
lab_03e="I get it."
wrn_02_25="Your hardware is not set or not compatible with Optimus,
$j\Bumblebee$end can't be installed on your system."
wrn_opti_01="%s do not appear to be installed or install is set to %s.
If you wish to install it, set$vB use_bumblebee$end to$vB %s$end in config and go to $vB\Install$end menu."
wrn_opti_02="There's no %s source or install element to be controled.
If you think your hardware is$vB Optimus$end compatible, go to $vB\Install$end menu."
wrn_opti_0=""

## reports
val_04_P="passed"
val_04_S="success"
val_04_A="aborted"
val_04_N="no effect"
m_04_01="Previous version"
m_04_01a="previously backed up"
m_04_01b="normal backup process"
m_04_01c="nothing to do"
m_04_02="Nvidia-installer"
m_04_02a="WARNING on missing /usr/lib(32/64)/LibGL.so link"
m_04_02b="ERROR couldn't unload nvidia-drm"
m_04_02c="WARNING missing libglvnd developpement files."
#m_04_02c="copied to $install_dir/bin"
m_04_03="Libraries install"
m_04_03a="normal install process"
m_04_04="Modules install"
m_04_04a="work-arround process"
m_04_05="Optimus"
m_04_05a="Prime"
m_04_05b="Bumblebee"
m_04_05c="is set to"
m_04_0=""
tit_03_65="Install Report"
rep_03_65="Congratulations!$j %s$end driver is now succefully installed.\n
You may now configure your$j xorg.conf$end file to fit with your default display before 
restarting your computer with newly installed drivers.
You may also do it later, if you like, but it's not really recommanded.\n"
lab_03_65a="edit now"
lab_03_65b="edit later"

## comment & help texts
hlp_tip_txt="Help tips text is currently set to \"1\". You can unset it at any
moment in$j Tools$end menu >$j Edit script config$end.\n\n"
hlp_01a="$vB\Select here the install type$end"
hlp_01b="$hlp_01a:
- $vB$_1a$end:\n\tInstall a new driver from a user directory local package 
\tor a listed already downloaded with zenvidia.
- $vB$_1b$end:\n\tInstall a driver downloaded directly from the nvidia ftp server."
hlp_01c="- $vB$_1c$end:\n\tDownload and install the Optimus GIT source
\tif your hardware is a discret graphic card."
#- $v$_1d$end:\n\tRemove and purge the default nvidia drivers.
#\tIt will erase completly the current Zenvidia driver install
#\tand reset all to default (nouveau basic drivers)."

hlp_02A="$vB\Select here the element to update$end"
hlp_02B="$hlp_02A:
- $vB$_2e$end:\n\tDriver update check, download and install.
\tyou could choose here if you want to download update only
\tor install it directly after download end."
hlp_02a="- $vB$_2a (dkms)$end:\n\tOptional command to install nvidia dkms modules
\tfor a new running kernel.
- $vB$_2a (force)$end:\n\tOptional command to force install from driver sources
\tfor a new running kernel in case of DKMS failure.
- $vB$_2b (dkms)$end:\n\tOptional command to install nvidia dkms modules
\tfor an other existing kernel."
hlp_02b="- $vB$_2a$end:\n\tOptional command to install nvidia modules
\tfor a new running kernel.
- $vB$_2b$end:\n\tOptional command to install nvidia modules
\tfor an other existing kernel."
hlp_02c="- $vB$_2f$end:\n\tCheck and install new version of Zenvidia from GIT repos."
hlp_02d="- $vB$_2c$end:\n\tCheck and install new version of Bumblebee from GIT repos.
- $vB$_2d$end:\n\tCheck and install new version of Prime from GIT repos."

hlp_03a="$vB\Select here the element to modify or edit$end"
hlp_03b="$hlp_03a:
- $vB$_3a$end:\n\tEdit the current xorg configuration file in /etc/X11.
- $vB$_3b$end:\n\tEdit Zenvidia basic user conf script to set or unset mostly everything.
- $vB$_3c$end:\n\tStart Nvidia-setting tools, especially for Bumblebee,
\tbut working also for default single GPU or Prime.
- $vB$_3d$end:\n\tThis tool is to backup, restore and remove old or current driver install.
\tIt also manage dowloaded nvidia's .run pack.
\tNote that if old installation is found during driver update,
\tit's automatically backup prior to new version installation.
- $vB$_3e$end:\n\tThis tool build or rebuild separately all installed GIT source.
\tIt helps in case of a fresh distro install or upgrade,
\tor in a unexpected lost of already installed and compilled GIT source.
- $vB$_3f$end:\n\tThis tool repair new or upgraded distro by rebuilding links and config
\tfataly lost during upgrade or fresh install process.
- $vB$_3g$end:\n\tConfiguration tool for Zen_notify update checker."
hlp_03c="- $vB$_3h$end:\n\tConfiguration tool for Prime display selector."

hlp_04a="$vB\Check GLX test and README file from Nvidia or Zenvidia$end"
hlp_04b="$hlp_04a:
- $vB$_4a$end:\n\tTest your driver installation with glxgears or glxspheres tools.
- $vB$_4b$end:\n\tRead the current Nvidia help file.
- $vB$_4c$end:\n\tRead the current Nvidia changelog file.
- $vB$_4d$end:\n\tRead current Zenvidia README file."
#"- $vB$end:\n\t
#- $vB$end:\n\t"
hlp_notif="You can leave it as it is or choose between one of\nthe sets below."
